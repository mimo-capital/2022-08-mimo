{
  "address": "0x2BaD16A8fc3BB58733D3742D84226FBDe200C27e",
  "abi": [
    {
      "inputs": [],
      "name": "CANNOT_SET_TO_ADDRESS_ZERO",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UNAUTHORIZED_CALLER",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "envoy",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes4",
          "name": "selector",
          "type": "bytes4"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "permission",
          "type": "bool"
        }
      ],
      "name": "PermissionSet",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "envoy",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "bytes4",
          "name": "selector",
          "type": "bytes4"
        }
      ],
      "name": "getPermission",
      "outputs": [
        {
          "internalType": "bool",
          "name": "permission",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getProxy",
      "outputs": [
        {
          "internalType": "address",
          "name": "proxy",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getProxyFactory",
      "outputs": [
        {
          "internalType": "contract IMIMOProxyFactory",
          "name": "proxyFactory",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "proxyFactory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "proxy",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "envoy",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "bytes4",
          "name": "selector",
          "type": "bytes4"
        },
        {
          "internalType": "bool",
          "name": "permission",
          "type": "bool"
        }
      ],
      "name": "setPermission",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x96f1bf75664af82c87ae7fb27adb93dbc18325c4aea60f6a115d8a10aa83edf9",
  "receipt": {
    "to": null,
    "from": "0x52004FfDf72fb793d5128c9F96d631F8770e2DaC",
    "contractAddress": "0x2BaD16A8fc3BB58733D3742D84226FBDe200C27e",
    "transactionIndex": 0,
    "gasUsed": "384143",
    "logsBloom": "0x
    "blockHash": "0xd64a9a268a4cf8a72fe5b1d8e03a3da632dd3a46d1a7b0c9957aaadce3faae2f",
    "transactionHash": "0x96f1bf75664af82c87ae7fb27adb93dbc18325c4aea60f6a115d8a10aa83edf9",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 32721816,
        "transactionHash": "0x96f1bf75664af82c87ae7fb27adb93dbc18325c4aea60f6a115d8a10aa83edf9",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x00000000000000000000000052004ffdf72fb793d5128c9f96d631f8770e2dac",
          "0x00000000000000000000000002f70172f7f490653665c9bfac0666147c8af1f5"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000ccb66749de5fe4000000000000000000000000000000000000000000000000a32ff1de7ecc3400000000000000000000000000000000000000000000000028a927132d1fef5a0b000000000000000000000000000000000000000000000000a2633b7734edd41c000000000000000000000000000000000000000000000028a9f3c99469cdb9ef",
        "logIndex": 0,
        "blockHash": "0xd64a9a268a4cf8a72fe5b1d8e03a3da632dd3a46d1a7b0c9957aaadce3faae2f"
      }
    ],
    "blockNumber": 32721816,
    "cumulativeGasUsed": "384143",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "f32a31898ee3e7d355d788de2c8f3c93",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CANNOT_SET_TO_ADDRESS_ZERO\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UNAUTHORIZED_CALLER\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"envoy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"permission\",\"type\":\"bool\"}],\"name\":\"PermissionSet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"envoy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"getPermission\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"permission\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProxy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proxy\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProxyFactory\",\"outputs\":[{\"internalType\":\"contract IMIMOProxyFactory\",\"name\":\"proxyFactory\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proxyFactory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"proxy\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"envoy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"internalType\":\"bool\",\"name\":\"permission\",\"type\":\"bool\"}],\"name\":\"setPermission\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getPermission(address,address,bytes4)\":{\"params\":{\"envoy\":\"The address of the envoy account\",\"selector\":\"The 4 byte function selector on the target contract\",\"target\":\"The address of the target contract\"},\"returns\":{\"permission\":\"True if envoys is allowed to perform the call and false if not\"}},\"getProxy()\":{\"returns\":{\"proxy\":\"Address of the MIMOProxy associated with this contract\"}},\"getProxyFactory()\":{\"returns\":{\"proxyFactory\":\"Address of the MIMOProxyFactory\"}},\"initialize(address,address)\":{\"details\":\"Called within same tx as cloning from MIMOProxyFactory\",\"params\":{\"proxy\":\"Address of the MIMOProxy linked to the contract\",\"proxyFactory\":\"Address of MIMOProxyFactory\"}},\"setPermission(address,address,bytes4,bool)\":{\"details\":\"It is not an error to reset a permission on the same (envoy,target,selector) tuple multiple types. Requirements: - The caller must be the owner or the MIMOProxy\",\"params\":{\"envoy\":\"The address of the envoy account\",\"permission\":\"The boolean permission to set\",\"selector\":\"The 4 byte function selector on the target contract\",\"target\":\"The address of the target contract\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"initialize(address,address)\":{\"notice\":\"Initializer function to set state variable upon cloning\"},\"setPermission(address,address,bytes4,bool)\":{\"notice\":\"Gives or takes a permission from an envoy to call the given target contract and function selector on behalf of the owner\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/proxy/MIMOProxyGuard.sol\":\"MIMOProxyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/Address.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = _setInitializedVersion(1);\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\\n     * initialization step. This is essential to configure modules that are added through upgrades and that require\\n     * initialization.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        bool isTopLevelCall = _setInitializedVersion(version);\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(version);\\n        }\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     */\\n    function _disableInitializers() internal virtual {\\n        _setInitializedVersion(type(uint8).max);\\n    }\\n\\n    function _setInitializedVersion(uint8 version) private returns (bool) {\\n        // If the contract is initializing we ignore whether _initialized is set in order to support multiple\\n        // inheritance patterns, but we only do this in the context of a constructor, and for the lowest level\\n        // of initializers, because in other contexts the contract may have been reentered.\\n        if (_initializing) {\\n            require(\\n                version == 1 && !Address.isContract(address(this)),\\n                \\\"Initializable: contract is already initialized\\\"\\n            );\\n            return false;\\n        } else {\\n            require(_initialized < version, \\\"Initializable: contract is already initialized\\\");\\n            _initialized = version;\\n            return true;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xb68c2016cd41840646addd6f79f17f80f42a6279acb0cd4d9d85cab6e8d9b777\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\"},\"contracts/libraries/Errors.sol\":{\"content\":\"// SPDX-License-Identifier: Unlicense\\npragma solidity 0.8.10;\\n\\n/**\\n    @title Errors library\\n    @author MIMO\\n    @notice Defines the error messages emtted by the different contracts of the MIMO protocol\\n */\\n\\nlibrary Errors {\\n  error CANNOT_SET_TO_ADDRESS_ZERO();\\n  error INITIATOR_NOT_AUTHORIZED(address actual, address expected);\\n  error CALLER_NOT_LENDING_POOL(address actual, address expected);\\n  error CANNOT_REPAY_FLASHLOAN();\\n  error INVALID_AGGREGATOR();\\n  error AGGREGATOR_CALL_FAILED();\\n  error EXECUTION_NOT_AUTHORIZED(address owner, address caller, address target, bytes4 selector);\\n  error EXECUTION_REVERTED();\\n  error NOT_OWNER(address owner, address caller);\\n  error OWNER_CHANGED(address originalOwner, address newOwner);\\n  error TARGET_INVALID(address target);\\n  error CALLER_NOT_VAULT_OWNER(address callerProxy, address vaultOwner);\\n  error CALLER_NOT_PROTOCOL_MANAGER();\\n  error MANAGER_NOT_LISTED();\\n  error VAULT_NOT_UNDER_MANAGEMENT();\\n  error CALLER_NOT_SELECTED_MANAGER();\\n  error PROXY_ALREADY_EXISTS(address owner);\\n  error MAX_OPERATIONS_REACHED();\\n  error MINT_AMOUNT_GREATER_THAN_VAULT_DEBT();\\n  error VAULT_VALUE_CHANGE_TOO_HIGH();\\n  error FINAL_VAULT_RATIO_TOO_LOW(uint256 minRatio, uint256 actualRatio);\\n  error VAULT_NOT_AUTOMATED();\\n  error VAULT_TRIGGER_RATIO_NOT_REACHED(uint256 actual, uint256 expected);\\n  error TARGETS_LENGTH_DIFFERENT_THAN_DATA_LENGTH(uint256 targetsLength, uint256 dataLength);\\n  error LOW_LEVEL_CALL_FAILED();\\n  error REBALANCE_AMOUNT_CANNOT_BE_ZERO();\\n  error VARIABLE_FEE_TOO_HIGH(uint256 maxVarFee, uint256 actualVarFee);\\n  error VAULT_NOT_INITIALIZED(uint256 vaultId);\\n  error ALREADY_OWNER(address owner, address ownedProxy);\\n  error CALLER_NOT_PENDING_OWNER(address caller, address pendingOwner);\\n  error UNAUTHORIZED_CALLER();\\n  error PAUSED();\\n}\\n\",\"keccak256\":\"0xc1749264f50f0c27653f862ccb7a87e1930603f67cc0bbb29ae533ab323ea155\",\"license\":\"Unlicense\"},\"contracts/proxy/MIMOProxyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: Unlicense\\npragma solidity 0.8.10;\\n\\nimport \\\"@openzeppelin/contracts/proxy/utils/Initializable.sol\\\";\\nimport \\\"./interfaces/IMIMOProxyFactory.sol\\\";\\nimport \\\"./interfaces/IMIMOProxyGuard.sol\\\";\\nimport { Errors } from \\\"../libraries/Errors.sol\\\";\\n\\ncontract MIMOProxyGuard is IMIMOProxyGuard, Initializable {\\n  address private _proxy;\\n  IMIMOProxyFactory private _proxyFactory;\\n\\n  mapping(address => mapping(address => mapping(bytes4 => bool))) private _permissions;\\n\\n  /**\\n    @notice Initializer function to set state variable upon cloning\\n    @dev Called within same tx as cloning from MIMOProxyFactory\\n    @param proxyFactory Address of MIMOProxyFactory\\n    @param proxy Address of the MIMOProxy linked to the contract\\n   */\\n  function initialize(address proxyFactory, address proxy) external override initializer {\\n    if (proxyFactory == address(0) || proxy == address(0)) {\\n      revert Errors.CANNOT_SET_TO_ADDRESS_ZERO();\\n    }\\n    _proxyFactory = IMIMOProxyFactory(proxyFactory);\\n    _proxy = proxy;\\n  }\\n\\n  /**\\n    @notice Gives or takes a permission from an envoy to call the given target contract and function selector\\n    on behalf of the owner\\n    @dev It is not an error to reset a permission on the same (envoy,target,selector) tuple multiple types.\\n        Requirements:\\n          - The caller must be the owner or the MIMOProxy\\n    @param envoy The address of the envoy account\\n    @param target The address of the target contract\\n    @param selector The 4 byte function selector on the target contract\\n    @param permission The boolean permission to set\\n   */\\n  function setPermission(\\n    address envoy,\\n    address target,\\n    bytes4 selector,\\n    bool permission\\n  ) external override {\\n    address owner = _proxyFactory.getProxyState(_proxy).owner;\\n    if (owner != msg.sender && _proxy != msg.sender) {\\n      revert Errors.UNAUTHORIZED_CALLER();\\n    }\\n    _permissions[envoy][target][selector] = permission;\\n    emit PermissionSet(envoy, target, selector, permission);\\n  }\\n\\n  /**\\n    @param envoy The address of the envoy account\\n    @param target The address of the target contract\\n    @param selector The 4 byte function selector on the target contract\\n    @return permission True if envoys is allowed to perform the call and false if not\\n   */\\n  function getPermission(\\n    address envoy,\\n    address target,\\n    bytes4 selector\\n  ) external view override returns (bool permission) {\\n    permission = _permissions[envoy][target][selector];\\n  }\\n\\n  /// @return proxy Address of the MIMOProxy associated with this contract\\n  function getProxy() external view override returns (address proxy) {\\n    proxy = _proxy;\\n  }\\n\\n  /// @return proxyFactory Address of the MIMOProxyFactory\\n  function getProxyFactory() external view override returns (IMIMOProxyFactory proxyFactory) {\\n    proxyFactory = _proxyFactory;\\n  }\\n}\\n\",\"keccak256\":\"0xc96b02fc8bb5d7ec1690c037009e2c6c6d19e2f9dbd9a676065995edd2217090\",\"license\":\"Unlicense\"},\"contracts/proxy/interfaces/IMIMOProxy.sol\":{\"content\":\"// SPDX-License-Identifier: Unlicense\\npragma solidity 0.8.10;\\n\\nimport \\\"./IMIMOProxyFactory.sol\\\";\\n\\n/// @title IMIMOProxy\\n/// @notice Proxy contract to compose transactions on owner's behalf.\\ninterface IMIMOProxy {\\n  event Execute(address indexed target, bytes data, bytes response);\\n\\n  function execute(address target, bytes calldata data) external payable returns (bytes memory response);\\n\\n  function proxyFactory() external returns (IMIMOProxyFactory);\\n}\\n\",\"keccak256\":\"0x3b1ba487a3e28063c13b5bf5dd78d738f232f7a801a0d164e499843772187532\",\"license\":\"Unlicense\"},\"contracts/proxy/interfaces/IMIMOProxyFactory.sol\":{\"content\":\"// SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.4;\\n\\nimport \\\"./IMIMOProxy.sol\\\";\\nimport \\\"./IMIMOProxyGuard.sol\\\";\\n\\n/// @title IMIMOProxyFactory\\n/// @notice Deploys new proxies with CREATE2.\\ninterface IMIMOProxyFactory {\\n  struct ProxyState {\\n    address owner;\\n    IMIMOProxyGuard proxyGuard;\\n    uint256 minGas;\\n  }\\n\\n  event ProxyDeployed(address indexed owner, address indexed proxy, ProxyState proxyState);\\n\\n  event PermissionsCleared(address indexed proxy, address newProxyGuard);\\n\\n  event OwnershipTransferred(address indexed proxy, address indexed previousOwner, address indexed newOwner);\\n\\n  event OwnershipClaimed(address indexed proxy, address indexed newOwner);\\n\\n  event MinGasSet(address indexed proxy, uint256 minGas);\\n\\n  function deploy() external;\\n\\n  function transferOwnership(address proxy, address newOwner) external;\\n\\n  function claimOwnership(address proxy, bool clear) external;\\n\\n  function clearPermissions(address proxy) external;\\n\\n  function setMinGas(address proxy, uint256 minGas) external;\\n\\n  function mimoProxyGuardBase() external returns (address);\\n\\n  function isProxy(address proxy) external returns (bool result);\\n\\n  function VERSION() external view returns (uint256);\\n\\n  function getProxyState(address proxy) external view returns (ProxyState memory proxyState);\\n\\n  function getCurrentProxy(address owner) external view returns (IMIMOProxy proxy);\\n\\n  function getPendingOwner(address proxy) external view returns (address pendingOwner);\\n}\\n\",\"keccak256\":\"0xd679829ba199a63195d7ef3db753643ba620c7b2d2b8e8293069a8dbf8f2a373\",\"license\":\"Unlicense\"},\"contracts/proxy/interfaces/IMIMOProxyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: Unlicense\\npragma solidity 0.8.10;\\n\\nimport \\\"./IMIMOProxyFactory.sol\\\";\\n\\ninterface IMIMOProxyGuard {\\n  event PermissionSet(address indexed envoy, address indexed target, bytes4 selector, bool permission);\\n\\n  function initialize(address proxyFactory, address proxy) external;\\n\\n  function setPermission(\\n    address envoy,\\n    address target,\\n    bytes4 selector,\\n    bool permission\\n  ) external;\\n\\n  function getPermission(\\n    address envoy,\\n    address target,\\n    bytes4 selector\\n  ) external view returns (bool);\\n\\n  function getProxy() external view returns (address proxy);\\n\\n  function getProxyFactory() external view returns (IMIMOProxyFactory proxyFactory);\\n}\\n\",\"keccak256\":\"0xceebcf2978b34653aaa522ee14ab436aee7e795bdd9c071bd202fb7b8b6a74fa\",\"license\":\"Unlicense\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506105fd806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063485cc9551461005c578063933a9ce814610071578063b28c51c0146100a1578063da8d882c146100b2578063e64624fa14610110575b600080fd5b61006f61006a366004610409565b610123565b005b6000546201000090046001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b6001546001600160a01b0316610084565b6101006100c036600461045a565b6001600160a01b0392831660009081526002602090815260408083209490951682529283528381206001600160e01b031990921681529152205460ff1690565b6040519015158152602001610098565b61006f61011e3660046104a1565b61020e565b600061012f600161035b565b90508015610147576000805461ff0019166101001790555b6001600160a01b038316158061016457506001600160a01b038216155b1561018257604051636a8403ad60e01b815260040160405180910390fd5b600180546001600160a01b0319166001600160a01b03858116919091179091556000805462010000600160b01b03191662010000928516929092029190911790558015610209576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b6001546000805460405163751913f760e11b81526001600160a01b0362010000909204821660048201529192169063ea3227ee90602401606060405180830381865afa158015610262573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102869190610500565b5190506001600160a01b03811633148015906102b357506000546201000090046001600160a01b03163314155b156102d15760405163e15e56c960e01b815260040160405180910390fd5b6001600160a01b0385811660008181526002602090815260408083209489168084529482528083206001600160e01b0319891680855290835292819020805460ff19168815159081179091558151938452918301919091527f9d950e4919d7c91068179be3cd6a99029ee6fdfcf4fb488053aa79841b517e03910160405180910390a35050505050565b60008054610100900460ff16156103ab578160ff16600114801561037e5750303b155b6103a35760405162461bcd60e51b815260040161039a90610579565b60405180910390fd5b506000919050565b60005460ff8084169116106103d25760405162461bcd60e51b815260040161039a90610579565b506000805460ff191660ff92909216919091179055600190565b919050565b6001600160a01b038116811461040657600080fd5b50565b6000806040838503121561041c57600080fd5b8235610427816103f1565b91506020830135610437816103f1565b809150509250929050565b80356001600160e01b0319811681146103ec57600080fd5b60008060006060848603121561046f57600080fd5b833561047a816103f1565b9250602084013561048a816103f1565b915061049860408501610442565b90509250925092565b600080600080608085870312156104b757600080fd5b84356104c2816103f1565b935060208501356104d2816103f1565b92506104e060408601610442565b9150606085013580151581146104f557600080fd5b939692955090935050565b60006060828403121561051257600080fd5b6040516060810181811067ffffffffffffffff8211171561054357634e487b7160e01b600052604160045260246000fd5b6040528251610551816103f1565b81526020830151610561816103f1565b60208201526040928301519281019290925250919050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b60608201526080019056fea2646970667358221220f9d58ccd7d041c67ed3f24ee11005a33fb2dd27516048507aa20f355049270e364736f6c634300080a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c8063485cc9551461005c578063933a9ce814610071578063b28c51c0146100a1578063da8d882c146100b2578063e64624fa14610110575b600080fd5b61006f61006a366004610409565b610123565b005b6000546201000090046001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b6001546001600160a01b0316610084565b6101006100c036600461045a565b6001600160a01b0392831660009081526002602090815260408083209490951682529283528381206001600160e01b031990921681529152205460ff1690565b6040519015158152602001610098565b61006f61011e3660046104a1565b61020e565b600061012f600161035b565b90508015610147576000805461ff0019166101001790555b6001600160a01b038316158061016457506001600160a01b038216155b1561018257604051636a8403ad60e01b815260040160405180910390fd5b600180546001600160a01b0319166001600160a01b03858116919091179091556000805462010000600160b01b03191662010000928516929092029190911790558015610209576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b6001546000805460405163751913f760e11b81526001600160a01b0362010000909204821660048201529192169063ea3227ee90602401606060405180830381865afa158015610262573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102869190610500565b5190506001600160a01b03811633148015906102b357506000546201000090046001600160a01b03163314155b156102d15760405163e15e56c960e01b815260040160405180910390fd5b6001600160a01b0385811660008181526002602090815260408083209489168084529482528083206001600160e01b0319891680855290835292819020805460ff19168815159081179091558151938452918301919091527f9d950e4919d7c91068179be3cd6a99029ee6fdfcf4fb488053aa79841b517e03910160405180910390a35050505050565b60008054610100900460ff16156103ab578160ff16600114801561037e5750303b155b6103a35760405162461bcd60e51b815260040161039a90610579565b60405180910390fd5b506000919050565b60005460ff8084169116106103d25760405162461bcd60e51b815260040161039a90610579565b506000805460ff191660ff92909216919091179055600190565b919050565b6001600160a01b038116811461040657600080fd5b50565b6000806040838503121561041c57600080fd5b8235610427816103f1565b91506020830135610437816103f1565b809150509250929050565b80356001600160e01b0319811681146103ec57600080fd5b60008060006060848603121561046f57600080fd5b833561047a816103f1565b9250602084013561048a816103f1565b915061049860408501610442565b90509250925092565b600080600080608085870312156104b757600080fd5b84356104c2816103f1565b935060208501356104d2816103f1565b92506104e060408601610442565b9150606085013580151581146104f557600080fd5b939692955090935050565b60006060828403121561051257600080fd5b6040516060810181811067ffffffffffffffff8211171561054357634e487b7160e01b600052604160045260246000fd5b6040528251610551816103f1565b81526020830151610561816103f1565b60208201526040928301519281019290925250919050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b60608201526080019056fea2646970667358221220f9d58ccd7d041c67ed3f24ee11005a33fb2dd27516048507aa20f355049270e364736f6c634300080a0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getPermission(address,address,bytes4)": {
        "params": {
          "envoy": "The address of the envoy account",
          "selector": "The 4 byte function selector on the target contract",
          "target": "The address of the target contract"
        },
        "returns": {
          "permission": "True if envoys is allowed to perform the call and false if not"
        }
      },
      "getProxy()": {
        "returns": {
          "proxy": "Address of the MIMOProxy associated with this contract"
        }
      },
      "getProxyFactory()": {
        "returns": {
          "proxyFactory": "Address of the MIMOProxyFactory"
        }
      },
      "initialize(address,address)": {
        "details": "Called within same tx as cloning from MIMOProxyFactory",
        "params": {
          "proxy": "Address of the MIMOProxy linked to the contract",
          "proxyFactory": "Address of MIMOProxyFactory"
        }
      },
      "setPermission(address,address,bytes4,bool)": {
        "details": "It is not an error to reset a permission on the same (envoy,target,selector) tuple multiple types. Requirements: - The caller must be the owner or the MIMOProxy",
        "params": {
          "envoy": "The address of the envoy account",
          "permission": "The boolean permission to set",
          "selector": "The 4 byte function selector on the target contract",
          "target": "The address of the target contract"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "initialize(address,address)": {
        "notice": "Initializer function to set state variable upon cloning"
      },
      "setPermission(address,address,bytes4,bool)": {
        "notice": "Gives or takes a permission from an envoy to call the given target contract and function selector on behalf of the owner"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1276,
        "contract": "contracts/proxy/MIMOProxyGuard.sol:MIMOProxyGuard",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 1279,
        "contract": "contracts/proxy/MIMOProxyGuard.sol:MIMOProxyGuard",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 10809,
        "contract": "contracts/proxy/MIMOProxyGuard.sol:MIMOProxyGuard",
        "label": "_proxy",
        "offset": 2,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 10812,
        "contract": "contracts/proxy/MIMOProxyGuard.sol:MIMOProxyGuard",
        "label": "_proxyFactory",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IMIMOProxyFactory)11113"
      },
      {
        "astId": 10820,
        "contract": "contracts/proxy/MIMOProxyGuard.sol:MIMOProxyGuard",
        "label": "_permissions",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_bytes4,t_bool)))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes4": {
        "encoding": "inplace",
        "label": "bytes4",
        "numberOfBytes": "4"
      },
      "t_contract(IMIMOProxyFactory)11113": {
        "encoding": "inplace",
        "label": "contract IMIMOProxyFactory",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_address,t_mapping(t_bytes4,t_bool)))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => mapping(bytes4 => bool)))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_mapping(t_bytes4,t_bool))"
      },
      "t_mapping(t_address,t_mapping(t_bytes4,t_bool))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(bytes4 => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes4,t_bool)"
      },
      "t_mapping(t_bytes4,t_bool)": {
        "encoding": "mapping",
        "key": "t_bytes4",
        "label": "mapping(bytes4 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}